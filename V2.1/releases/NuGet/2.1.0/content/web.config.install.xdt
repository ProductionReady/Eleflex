<?xml version="1.0"?>
<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <connectionStrings xdt:Transform="InsertIfMissing">
    <add name="EleflexDefault" connectionString="server=localhost;database=Eleflex;user id=test;password=test;" xdt:Locator="Match(name)" xdt:Transform="InsertIfMissing" />
  </connectionStrings>
  <appSettings xdt:Transform="InsertIfMissing">
    <add key="webpages:Version" value="3.0.0.0" xdt:Locator="Match(key)" xdt:Transform="SetAttributes(value)" />
	<add key="enableSimpleMembership" value="false" xdt:Locator="Match(key)" xdt:Transform="InsertIfMissing" />
	<add key="EleflexImpersonateSystemToken" value="THIS IS A SECRET KEY THAT ALLOWS IMPERSONATING THE ELEFLEX SYSTEM ADMIN ACCOUNT FOR WCF SERVICE CALLS! CHANGE THIS VALUE BEFORE YOU DEPLOY YOUR WEB APPLICATION!" xdt:Locator="Match(key)" xdt:Transform="InsertIfMissing" />
  </appSettings>
  <system.net xdt:Transform="InsertIfMissing">
    <mailSettings xdt:Transform="InsertIfMissing">
      <smtp from="Eleflex@Eleflex.com" xdt:Transform="InsertIfMissing">
        <network host="localhost" userName="test" password="test" port="25" enableSsl="false" xdt:Transform="InsertIfMissing" />
      </smtp>
    </mailSettings>
  </system.net>
  <system.web xdt:Transform="InsertIfMissing">
    <authentication mode="None" xdt:Transform="InsertIfMissing" />
  </system.web>
  <system.serviceModel xdt:Transform="InsertIfMissing">
	<extensions xdt:Transform="InsertIfMissing">
      <behaviorExtensions xdt:Transform="InsertIfMissing">
        <add name="EleflexCookieSecurityClientBehavior" type="Eleflex.Web.CookieSecurityClientBehaviorExtension, Eleflex.Web" xdt:Locator="Match(name)" xdt:Transform="InsertIfMissing" />
        <add name="EleflexCookieSecurityServerBehavior" type="Eleflex.WebServer.CookieSecurityServerBehaviorExtension, Eleflex.WebServer" xdt:Locator="Match(name)" xdt:Transform="InsertIfMissing" />
      </behaviorExtensions>
    </extensions>
    <behaviors xdt:Transform="InsertIfMissing">
      <endpointBehaviors xdt:Transform="InsertIfMissing">
        <behavior name="EleflexBehavior" xdt:Locator="Match(name)" xdt:Transform="InsertIfMissing" >
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
		  <EleflexCookieSecurityClientBehavior xdt:Transform="InsertIfMissing" />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors xdt:Transform="InsertIfMissing">
        <behavior name="EleflexBehavior" xdt:Locator="Match(name)" xdt:Transform="InsertIfMissing" >
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <dataContractSerializer maxItemsInObjectGraph="2147483647" />
          <serviceThrottling maxConcurrentCalls="500" maxConcurrentInstances="500" />
		  <serviceAuthorization principalPermissionMode="Custom" xdt:Transform="InsertIfMissing">
            <authorizationPolicies xdt:Transform="InsertIfMissing">
              <add policyType="Eleflex.WebServer.CookieSecurityServerAuthorizationPolicy, Eleflex.WebServer" xdt:Transform="InsertIfMissing" />
            </authorizationPolicies>
          </serviceAuthorization>
          <EleflexCookieSecurityServerBehavior xdt:Transform="InsertIfMissing" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings xdt:Transform="InsertIfMissing">
      <basicHttpBinding xdt:Transform="InsertIfMissing">
        <binding name="EleflexBinding" maxBufferSize="2147483647" maxReceivedMessageSize="2147483647" receiveTimeout="00:30:00" sendTimeout="00:30:00" xdt:Locator="Match(name)" xdt:Transform="InsertIfMissing" >
          <readerQuotas maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxDepth="2147483647" maxNameTableCharCount="2147483647" maxStringContentLength="2147483647" />
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>
    <client xdt:Transform="InsertIfMissing">
      <endpoint address="http://localhost:16185/EleflexService.svc" name="EleflexDefault" behaviorConfiguration="EleflexBehavior" binding="basicHttpBinding" bindingConfiguration="EleflexBinding" contract="Eleflex.Services.IServiceCommandHandler" xdt:Locator="Match(name)" xdt:Transform="InsertIfMissing" />
    </client>
    <services xdt:Transform="InsertIfMissing">
      <service name="Eleflex.Services.Server.ServiceCommandService" behaviorConfiguration="EleflexBehavior" xdt:Locator="Match(name)" xdt:Transform="InsertIfMissing">
        <endpoint address="" behaviorConfiguration="EleflexBehavior" binding="basicHttpBinding" bindingConfiguration="EleflexBinding" contract="Eleflex.Services.IServiceCommandHandler" xdt:Locator="Match(contract)" xdt:Transform="InsertIfMissing" />
      </service>
    </services>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" xdt:Transform="InsertIfMissing">
    </serviceHostingEnvironment>
  </system.serviceModel>
</configuration>
